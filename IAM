What is IAM?

AWS Identity and Access Management (IAM) is a web service that helps you securely control access to AWS resources.
With IAM, you can centrally manage permissions that control which AWS resources users can access. 
You use IAM to control who is authenticated (signed in) and authorized (has permissions) to use resources.

When you create an AWS account, 
you begin with one sign-in identity that has complete access to all AWS services and resources in the account. 
This identity is called the AWS account root user and is accessed by signing in with
the email address and password that you used to create the account. 
We strongly recommend that you don't use the root user for your everyday tasks. 
Safeguard your root user credentials and use them to perform the tasks that only the root user can perform. 
For the complete list of tasks that require you to sign in as the root user, see Tasks that require root user credentials.
IAM features

IAM gives you the following features:

Shared access to your AWS account
You can grant other people permission to administer and use resources in your AWS account 
without having to share your password or access key.

Granular permissions
You can grant different permissions to different people for different resources. 
For example, you might allow some users complete access to Amazon Elastic Compute Cloud (Amazon EC2),
Amazon Simple Storage Service (Amazon S3), Amazon DynamoDB, Amazon Redshift, and other AWS services. 
For other users, you can allow read-only access to just some S3 buckets, or permission to administer just some EC2 instances, 
or to access your billing information but nothing else.

Secure access to AWS resources for applications that run on Amazon EC2
You can use IAM features to securely provide credentials for applications that run on EC2 instances.
These credentials provide permissions for your application to access other AWS resources. 
Examples include S3 buckets and DynamoDB tables.

Multi-factor authentication (MFA)
You can add two-factor authentication to your account and to individual users for extra security. 
With MFA you or your users must provide not only a password or access key to work with your account,
but also a code from a specially configured device. 
If you already use a FIDO security key with other services,
and it has an AWS supported configuration, you can use WebAuthn for MFA security. 
For more information, see Supported configurations for using passkeys and security keys.

